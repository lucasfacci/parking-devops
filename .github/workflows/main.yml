name: Deploy Kubernetes

# Controls when the workflow will run
on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: make test

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      ecr_registry: 431628235125.dkr.ecr.us-east-1.amazonaws.com
      ecr_repository: parking-devops-ecr
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::431628235125:role/parking-devops-gh-actions-oidc-role
      - id: build
        name: Build Docker image
        run: |
          aws sts get-caller-identity

          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ecr_registry}

          sha=${{ github.sha }}
          short_sha=${sha:0:7}

          docker build -t ${ecr_registry}/${ecr_repository}:dev-${short_sha} .
          docker push ${ecr_registry}/${ecr_repository}:dev-${short_sha}

          echo "image_tag=dev-${short_sha}" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::431628235125:role/parking-devops-gh-actions-oidc-role
      - env:
          TAG: ${{ needs.build.outputs.image_tag }}
        name: Deploy to Kubernetes
        run: |
          aws eks update-kubeconfig --name parking-devops-cluster --region us-east-1

          echo ${TAG}